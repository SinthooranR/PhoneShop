{"version":3,"sources":["assets/styles/Cart.module.scss","assets/styles/Form.module.scss","assets/styles/ProductInfo.module.scss","assets/styles/Home.module.scss","assets/styles/Profile.module.scss","assets/styles/Navbar.module.scss","assets/styles/Login.module.scss","services/axiosHTTP.ts","services/loginService.ts","services/accountService.ts","services/shopService.ts","redux/shopSlice.ts","redux/accountSlice.ts","assets/images/LoginImage.jpg","components/interface/FormInput.tsx","components/interface/ErrorMessage.tsx","components/login/Login.tsx","components/login/Register.tsx","pages/common/LoginPage.tsx","pages/common/AuthRedirect.tsx","pages/common/PurchaseComplete.tsx","components/interface/Navbar.tsx","redux/store.ts","components/interface/Reminder.tsx","components/products/Product.tsx","pages/home/HomePage.tsx","components/products/ProductInfo.tsx","pages/home/ProductInfoPage.tsx","components/account/Profile.tsx","components/account/ShippingInfo.tsx","pages/home/ProfilePage.tsx","components/products/CartItem.tsx","pages/home/CartPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","baseURL","axios","create","name","email","password","http","post","then","response","data","token","localStorage","setItem","JSON","stringify","removeItem","window","location","assign","value","getItem","parse","user","loginService","getUser","userId","get","headers","Authorization","put","quantity","productId","cartId","LoginService","getAllProducts","createAsyncThunk","_","a","dispatch","rejectWithValue","ShopService","getCart","_id","console","log","shopSlice","createSlice","initialState","cart","products","isFetching","isError","errorMessage","totalSum","reducers","extraReducers","builder","addCase","fulfilled","state","payload","pending","rejected","shopSelector","shop","AccountService","accountSlice","account","users","accountSelector","FormInput","register","inputValue","label","minLength","pattern","maxLength","validate","min","placeholder","type","errors","required","defaultValue","autoComplete","setNewValue","className","classes","id","onChange","Error","ErrorMessage","message","style","textAlign","Login","loginCallback","useForm","handleSubmit","formState","setValue","useState","isEmail","setIsEmail","error","setError","submitEmail","formData","loginHandler","login","res","reload","catch","err","msg","LoginForm","LoginHeader","FormComponent","onSubmit","ButtonArea","onClick","color","marginTop","cursor","Register","registerCallback","watch","history","useHistory","useRef","current","submitHandler","registerHandler","push","RegisterHeader","LoginPage","isRegister","setIsRegister","to","MainPanel","Grid","src","Image","alt","Boolean","AuthRedirect","timer","setTimer","useEffect","setTimeout","Redirect","Card","PurchaseComplete","Navbar","logout","store","configureStore","reducer","shopReducer","accountReducer","useTypedSelector","useSelector","Reminder","componentAcc","balance","Product","productName","productBrand","price","stock","productImage","viewProduct","HomePage","Home","ProductContainer","length","ProductGrid","map","product","pathname","paddingTop","ProductInfo","productInfo","removeQuantity","addQuantity","addToCartHandler","PageContainer","Info","InfoGrid","Details","Specifications","specifications","os","storage","ram","size","resolution","battery","marginBottom","disabled","backgroundColor","ProductInfoPage","setProductInfo","setQuantity","parsedProduct","adjustQuanitity","ProductPage","addProductToCart","Profile","total","Math","round","Number","EPSILON","ShippingInfo","shipInfo","addShipping","phone","address","postalCode","country","city","province","updateBilling","ShippingForm","display","justifyContent","ProfilePage","acc","shipping","CartItem","ItemContainer","InfoDiv","totalPrice","QuantityDiv","margin","updateProductInCart","RemoveBtn","UpdateBtn","padding","CartPage","isPurchase","setIsPurchase","CartContainer","index","purchaseCart","App","useDispatch","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4fccbbd4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CartPage\":\"Cart_CartPage__3JWWb\",\"CartContainer\":\"Cart_CartContainer__1TZPY\",\"UpdateBtn\":\"Cart_UpdateBtn__1vnMR\",\"RemoveBtn\":\"Cart_RemoveBtn__1KLgu\",\"CartItem\":\"Cart_CartItem__39ni-\",\"ItemContainer\":\"Cart_ItemContainer__1Kgts\",\"InfoDiv\":\"Cart_InfoDiv__y7ktO\",\"QuantityDiv\":\"Cart_QuantityDiv__1QiCR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormInput\":\"Form_FormInput__HbA8_\",\"Error\":\"Form_Error__b8Zsg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProductPage\":\"ProductInfo_ProductPage__3Ccv8\",\"PageContainer\":\"ProductInfo_PageContainer__1Zk2s\",\"Info\":\"ProductInfo_Info__1UgIr\",\"InfoGrid\":\"ProductInfo_InfoGrid__2K50R\",\"Details\":\"ProductInfo_Details__3dizq\",\"Specifications\":\"ProductInfo_Specifications__1eBX6\",\"ButtonArea\":\"ProductInfo_ButtonArea__15eCO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Home\":\"Home_Home__3bY0z\",\"Reminder\":\"Home_Reminder__lRF38\",\"ProductContainer\":\"Home_ProductContainer__XEZVH\",\"ProductGrid\":\"Home_ProductGrid__108YI\",\"Product\":\"Home_Product__1wqLx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfilePage\":\"Profile_ProfilePage__26e5s\",\"ShippingInfo\":\"Profile_ShippingInfo__3Kkvs\",\"ShippingForm\":\"Profile_ShippingForm__1dU-o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__JA-Nq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__1ZEFZ\",\"MainPanel\":\"Login_MainPanel__10ReW\",\"fadein\":\"Login_fadein__2rFbv\",\"Grid\":\"Login_Grid__1sTTh\",\"LoginForm\":\"Login_LoginForm__1slto\",\"FormComponent\":\"Login_FormComponent__Jz0kD\",\"ButtonArea\":\"Login_ButtonArea__298ii\",\"LoginHeader\":\"Login_LoginHeader__iaXjS\",\"RegisterHeader\":\"Login_RegisterHeader__NQf7B\",\"Redirect\":\"Login_Redirect__1N0li\",\"Card\":\"Login_Card__3Hwg2\"};","import axios from \"axios\";\r\n\r\nlet baseURL;\r\nif (process.env.NODE_ENV === \"production\") {\r\n  baseURL = \"https://ecommerce-phone-app.herokuapp.com/api\";\r\n} else {\r\n  baseURL = \"http://localhost:5000/api\";\r\n}\r\n\r\nexport default axios.create({\r\n  baseURL: baseURL,\r\n});\r\n","import http from \"./axiosHTTP\";\r\n\r\nclass AuthService {\r\n  register(name: String, email: String, password: String) {\r\n    return http.post(\"/register\", { name, email, password });\r\n  }\r\n\r\n  login(email: String, password: String) {\r\n    return http.post(\"/login\", { email, password }).then((response: any) => {\r\n      if (response.data.token) {\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n      }\r\n\r\n      return response.data;\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n    window.location.assign(\"/\");\r\n  }\r\n\r\n  getUser() {\r\n    let value: any = localStorage.getItem(\"user\");\r\n    let parsedValue: any = JSON.parse(value);\r\n    return parsedValue;\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import http from \"./axiosHTTP\";\r\nimport loginService from \"./loginService\";\r\n\r\nconst user = loginService.getUser();\r\n\r\nclass AccountService {\r\n  getUser(userId: String) {\r\n    return http\r\n      .get(`/user/${userId}`, { headers: { Authorization: user?.token } })\r\n      .then((response: any) => {\r\n        if (response.data) {\r\n          return response.data;\r\n        }\r\n      });\r\n  }\r\n\r\n  updateBilling(userId: String, data: any) {\r\n    return http\r\n      .put(\r\n        \"/user/billing\",\r\n        { userId, data },\r\n        { headers: { Authorization: user?.token } }\r\n      )\r\n      .then((response: any) => {\r\n        if (response.data) {\r\n          return response.data;\r\n        }\r\n      });\r\n  }\r\n}\r\n\r\nexport default new AccountService();\r\n","import http from \"./axiosHTTP\";\r\nimport loginService from \"./loginService\";\r\n\r\nconst user = loginService.getUser();\r\n\r\nclass ShopService {\r\n  getAllProducts() {\r\n    return http\r\n      .get(\"/products\", { headers: { Authorization: user?.token } })\r\n      .then((response: any) => {\r\n        if (response.data) {\r\n          return response.data;\r\n        }\r\n      });\r\n  }\r\n\r\n  addProductToCart(quantity: Number, userId: String, productId: String) {\r\n    return http\r\n      .post(\r\n        \"/cart\",\r\n        { quantity, userId, productId },\r\n        { headers: { Authorization: user?.token } }\r\n      )\r\n      .then((response: any) => {\r\n        if (response.data) {\r\n          return response.data;\r\n        }\r\n      });\r\n  }\r\n\r\n  updateProductInCart(quantity: Number, cartId: String, productId: String) {\r\n    return http\r\n      .put(\r\n        \"/cart\",\r\n        { quantity, cartId, productId },\r\n        { headers: { Authorization: user?.token } }\r\n      )\r\n      .then((response: any) => {\r\n        if (response.data) {\r\n          return response.data;\r\n        }\r\n      });\r\n  }\r\n\r\n  getCart(userId: String) {\r\n    return http\r\n      .get(`/cart/${userId}`, { headers: { Authorization: user?.token } })\r\n      .then((response: any) => {\r\n        if (response.data) {\r\n          return response.data;\r\n        }\r\n      });\r\n  }\r\n\r\n  purchaseCart(userId: String) {\r\n    return http\r\n      .post(\r\n        \"/cart/purchase\",\r\n        { userId },\r\n        { headers: { Authorization: user?.token } }\r\n      )\r\n      .then((response: any) => {\r\n        if (response.data) {\r\n          return response.data;\r\n        }\r\n      });\r\n  }\r\n}\r\n\r\nexport default new ShopService();\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"./store\";\r\nimport { LoginService, ShopService } from \"../services\";\r\n\r\ninterface AppState {\r\n  isFetching: Boolean;\r\n  isError: Boolean;\r\n  errorMessage: string;\r\n  products: Products[];\r\n  cart: [];\r\n  totalSum: Number | null;\r\n}\r\n\r\ninterface Products {\r\n  _id: string;\r\n  productName: string;\r\n  productBrand: string;\r\n  productImage: string;\r\n  stock: Number;\r\n  price: Number;\r\n  specifications: Specifications | null;\r\n}\r\n\r\ninterface Specifications {\r\n  storage: Number | null;\r\n  ram: Number | null;\r\n  battery: string;\r\n  os: string;\r\n  size: Number | null;\r\n  resolution: string;\r\n}\r\n\r\nconst userId = LoginService.getUser();\r\n\r\nexport const getAllProducts = createAsyncThunk(\r\n  \"shop/products\",\r\n  async (_, { dispatch, rejectWithValue }) => {\r\n    try {\r\n      const response = await ShopService.getAllProducts();\r\n      return await response;\r\n    } catch (err: any) {\r\n      if (!err.response) {\r\n        throw err;\r\n      }\r\n      return rejectWithValue(err.response);\r\n    }\r\n  }\r\n);\r\n\r\nexport const getCart = createAsyncThunk(\r\n  \"shop/cart\",\r\n  async (_, { dispatch, rejectWithValue }) => {\r\n    try {\r\n      const response = await ShopService.getCart(userId?._id);\r\n      console.log(response);\r\n      return await response;\r\n    } catch (err: any) {\r\n      if (!err.response) {\r\n        throw err;\r\n      }\r\n      return rejectWithValue(err.response);\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState: AppState = {\r\n  cart: [],\r\n  products: [],\r\n  isFetching: false,\r\n  isError: false,\r\n  errorMessage: \"\",\r\n  totalSum: null,\r\n};\r\n\r\nexport const shopSlice = createSlice({\r\n  name: \"shop\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(getAllProducts.fulfilled, (state, { payload }) => {\r\n      state.isFetching = false;\r\n\r\n      state.products = payload.products;\r\n\r\n      return state;\r\n    });\r\n\r\n    builder.addCase(getAllProducts.pending, (state, { payload }) => {\r\n      state.isFetching = true;\r\n    });\r\n\r\n    builder.addCase(getAllProducts.rejected, (state, { payload }) => {\r\n      state.isError = true;\r\n      state.isFetching = false;\r\n    });\r\n\r\n    builder.addCase(getCart.fulfilled, (state, { payload }) => {\r\n      state.isFetching = false;\r\n      state.cart = payload.cart;\r\n      state.totalSum = payload.totalSum;\r\n      return state;\r\n    });\r\n    builder.addCase(getCart.pending, (state, { payload }) => {\r\n      state.isFetching = true;\r\n    });\r\n\r\n    builder.addCase(getCart.rejected, (state, { payload }) => {\r\n      state.isError = true;\r\n      state.isFetching = false;\r\n    });\r\n  },\r\n});\r\n\r\nexport const shopSelector = (state: RootState) => state.shop;\r\nexport default shopSlice.reducer;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"./store\";\r\nimport { LoginService, AccountService } from \"../services\";\r\n\r\ninterface AppState {\r\n  account: {};\r\n  isFetching: Boolean;\r\n  isError: Boolean;\r\n  errorMessage: string;\r\n}\r\nconst user = LoginService.getUser();\r\n\r\nexport const getUser = createAsyncThunk(\r\n  \"user/getAccount\",\r\n  async (_, { dispatch, rejectWithValue }) => {\r\n    try {\r\n      const response = await AccountService.getUser(user?._id);\r\n      return await response;\r\n    } catch (err: any) {\r\n      if (!err.response) {\r\n        throw err;\r\n      }\r\n      return rejectWithValue(err.response);\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState: AppState = {\r\n  account: {},\r\n  isFetching: false,\r\n  isError: false,\r\n  errorMessage: \"\",\r\n};\r\n\r\nexport const accountSlice = createSlice({\r\n  name: \"account\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(getUser.fulfilled, (state, { payload }) => {\r\n      state.isFetching = false;\r\n\r\n      state.account = payload.users;\r\n\r\n      return state;\r\n    });\r\n\r\n    builder.addCase(getUser.pending, (state, { payload }) => {\r\n      state.isFetching = true;\r\n    });\r\n\r\n    builder.addCase(getUser.rejected, (state, { payload }) => {\r\n      state.isError = true;\r\n      state.isFetching = false;\r\n    });\r\n  },\r\n});\r\n\r\nexport const accountSelector = (state: RootState) => state.account;\r\nexport default accountSlice.reducer;\r\n","export default __webpack_public_path__ + \"static/media/LoginImage.9e288df3.jpg\";","import React from \"react\";\r\nimport classes from \"../../assets/styles/Form.module.scss\";\r\n\r\ninterface InputProps {\r\n  register: any;\r\n  inputValue: any;\r\n  label?: String;\r\n  minLength?: Number;\r\n  pattern?: String;\r\n  maxLength?: Number;\r\n  min?: Number;\r\n  type?: String;\r\n  placeholder?: String;\r\n  errors: any;\r\n  required?: Boolean;\r\n  autoComplete?: String;\r\n  defaultValue?: any;\r\n  setNewValue?: any;\r\n  onChange?: () => void;\r\n  validate?: (value: any) => any;\r\n}\r\n\r\nconst FormInput = ({\r\n  register,\r\n  inputValue,\r\n  label,\r\n  minLength,\r\n  pattern,\r\n  maxLength,\r\n  validate,\r\n  min,\r\n  placeholder,\r\n  type,\r\n  errors,\r\n  required,\r\n  autoComplete,\r\n  defaultValue,\r\n  setNewValue,\r\n}: InputProps) => {\r\n  return (\r\n    <div className={classes.FormInput}>\r\n      {label && <label>{label}</label>}\r\n      <div>\r\n        <input\r\n          autoComplete={defaultValue && \"new-input\"}\r\n          name={inputValue}\r\n          id={inputValue}\r\n          type={type}\r\n          placeholder={placeholder}\r\n          {...register(inputValue, {\r\n            required: required,\r\n            minLength: minLength,\r\n            pattern: pattern, // /^[A-Za-z]+$/i\r\n            maxLength: maxLength,\r\n            validate: validate,\r\n            min: min,\r\n            onChange: () => setNewValue,\r\n          })}\r\n          defaultValue={defaultValue}\r\n        />\r\n      </div>\r\n\r\n      {errors[inputValue]?.type === \"required\" && (\r\n        <div className={classes.Error}>\r\n          {label ? label + \" \" : \"This field\"}is required!\r\n        </div>\r\n      )}\r\n\r\n      {errors[inputValue]?.type === \"pattern\" && (\r\n        <div className={classes.Error}>\r\n          {label ? label + \" must \" : \"Must\"} be in the Correct Format\r\n        </div>\r\n      )}\r\n      {errors[inputValue]?.type === \"minLength\" && (\r\n        <div className={classes.Error}>\r\n          {label ? label + \" must \" : \"Must\"} be at least {minLength} Characters\r\n        </div>\r\n      )}\r\n      {errors[inputValue]?.type === \"maxLength\" && (\r\n        <div className={classes.Error}>\r\n          {label ? label + \" cannot \" : \"Cust\"} exceed {maxLength} characters!\r\n        </div>\r\n      )}\r\n      {errors[inputValue]?.type === \"min\" && (\r\n        <div className={classes.Error}>\r\n          {label ? label + \" cannot \" : \"Cannot\"} be less than {min}\r\n        </div>\r\n      )}\r\n      {inputValue === \"confirmPassword\" &&\r\n        errors[inputValue]?.type === \"validate\" && (\r\n          <div className={classes.Error}>Passwords do not Match</div>\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import React from \"react\";\r\nimport classes from \"../../assets/styles/Form.module.scss\";\r\n\r\nconst ErrorMessage = ({ message }: any) => {\r\n  return (\r\n    <>\r\n      {message && (\r\n        <div style={{ textAlign: \"center\" }} className={classes.Error}>\r\n          {message}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React, { useState } from \"react\";\r\nimport FormInput from \"../interface/FormInput\";\r\nimport ErrorMessage from \"../interface/ErrorMessage\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { LoginService } from \"../../services\";\r\nimport classes from \"../../assets/styles/Login.module.scss\";\r\n\r\ninterface LoginProps {\r\n  loginCallback: (setMode: Boolean) => void;\r\n}\r\n\r\nconst Login = ({ loginCallback }: LoginProps) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    setValue,\r\n  } = useForm();\r\n\r\n  const [isEmail, setIsEmail] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const submitEmail = handleSubmit((formData) => {\r\n    setValue(\"password\", \"\");\r\n    setIsEmail(true);\r\n  });\r\n\r\n  const loginHandler = handleSubmit((formData) => {\r\n    LoginService.login(formData.email, formData.password)\r\n      .then((res) => {\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => {\r\n        if (err.response.data.msg) {\r\n          setError(err?.response?.data?.msg);\r\n        } else {\r\n          setError(err?.response?.data?.errors[0]?.msg);\r\n        }\r\n      });\r\n  });\r\n\r\n  const changeToReg = () => {\r\n    loginCallback(true);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.LoginForm}>\r\n      <h2 className={classes.LoginHeader}>Login</h2>\r\n      <div className={classes.FormComponent}>\r\n        <form onSubmit={loginHandler}>\r\n          {!isEmail ? (\r\n            <FormInput\r\n              register={register}\r\n              required\r\n              inputValue=\"email\"\r\n              placeholder=\"Enter Email\"\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              autoComplete=\"new-email\"\r\n              errors={errors}\r\n            />\r\n          ) : (\r\n            <FormInput\r\n              required\r\n              inputValue=\"password\"\r\n              placeholder=\"Enter Password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              register={register}\r\n              autoComplete=\"new-password\"\r\n              errors={errors}\r\n            />\r\n          )}\r\n\r\n          <div className={classes.ButtonArea}>\r\n            {!isEmail ? (\r\n              <button onClick={submitEmail}>Continue</button>\r\n            ) : (\r\n              <button onClick={loginHandler}>Submit</button>\r\n            )}\r\n          </div>\r\n          <div>\r\n            <ErrorMessage message={error} />\r\n          </div>\r\n          <hr style={{ color: \"white\", marginTop: \"2.5rem\" }} />\r\n          <p\r\n            style={{ textAlign: \"center\", cursor: \"pointer\" }}\r\n            onClick={changeToReg}\r\n          >\r\n            Dont have an account? Register\r\n          </p>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useRef, useState } from \"react\";\r\nimport FormInput from \"../interface/FormInput\";\r\nimport ErrorMessage from \"../interface/ErrorMessage\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { LoginService } from \"../../services\";\r\nimport { useHistory } from \"react-router\";\r\nimport classes from \"../../assets/styles/Login.module.scss\";\r\n\r\ninterface RegisterProps {\r\n  registerCallback: (setMode: Boolean) => void;\r\n}\r\n\r\nconst Register = ({ registerCallback }: RegisterProps) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    setValue,\r\n    watch,\r\n  } = useForm();\r\n  const history = useHistory();\r\n\r\n  const password = useRef({});\r\n  password.current = watch(\"password\", \"\");\r\n\r\n  const submitHandler = handleSubmit((formData) => {\r\n    console.log(formData);\r\n  });\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const [isEmail, setIsEmail] = useState(false);\r\n\r\n  const submitEmail = handleSubmit((formData) => {\r\n    setValue(\"password\", \"\");\r\n    setValue(\"confirmPassword\", \"\");\r\n    setIsEmail(true);\r\n  });\r\n\r\n  const registerHandler = handleSubmit((formData) => {\r\n    LoginService.register(formData.name, formData.email, formData.password)\r\n      .then((res) => {\r\n        history.push(\"/redirect\");\r\n      })\r\n      .catch((err) => {\r\n        if (err.response.data.msg) {\r\n          setError(err?.response?.data?.msg);\r\n        } else {\r\n          setError(err?.response?.data?.errors[0]?.msg);\r\n        }\r\n      });\r\n  });\r\n\r\n  const changeToLogin = () => {\r\n    registerCallback(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.LoginForm}>\r\n      <h2 className={classes.RegisterHeader}>Register</h2>\r\n      <div className={classes.FormComponent}>\r\n        <form onSubmit={submitHandler}>\r\n          {!isEmail ? (\r\n            <>\r\n              <FormInput\r\n                register={register}\r\n                required\r\n                inputValue=\"name\"\r\n                placeholder=\"Enter Name\"\r\n                label=\"Your Name\"\r\n                type=\"text\"\r\n                errors={errors}\r\n              />\r\n\r\n              <FormInput\r\n                register={register}\r\n                required\r\n                inputValue=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                label=\"Email\"\r\n                type=\"email\"\r\n                errors={errors}\r\n              />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <FormInput\r\n                register={register}\r\n                required\r\n                inputValue=\"password\"\r\n                placeholder=\"Enter Password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                errors={errors}\r\n              />\r\n\r\n              <FormInput\r\n                register={register}\r\n                required\r\n                inputValue=\"confirmPassword\"\r\n                placeholder=\"Confirm Password\"\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                errors={errors}\r\n                validate={(value) =>\r\n                  value === password.current || \"The passwords do not match\"\r\n                }\r\n              />\r\n            </>\r\n          )}\r\n          <div className={classes.ButtonArea}>\r\n            {!isEmail ? (\r\n              <button onClick={submitEmail}>Continue</button>\r\n            ) : (\r\n              <button onClick={registerHandler}>Submit</button>\r\n            )}\r\n          </div>\r\n          <div>\r\n            <ErrorMessage message={error} />\r\n          </div>\r\n          <hr style={{ color: \"white\", marginTop: \"2.5rem\" }} />\r\n          <p\r\n            style={{ textAlign: \"center\", cursor: \"pointer\" }}\r\n            onClick={changeToLogin}\r\n          >\r\n            Have an Account? Please Login.\r\n          </p>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useState } from \"react\";\r\nimport Image from \"../../assets/images/LoginImage.jpg\";\r\nimport Login from \"../../components/login/Login\";\r\nimport Register from \"../../components/login/Register\";\r\nimport { Redirect } from \"react-router\";\r\nimport { LoginService } from \"../../services\";\r\nimport classes from \"../../assets/styles/Login.module.scss\";\r\n\r\nconst LoginPage = () => {\r\n  const user = LoginService.getUser();\r\n  const [isRegister, setIsRegister] = useState(false);\r\n  return (\r\n    <>\r\n      {!user ? (\r\n        <div className={classes.Login}>\r\n          <div className={classes.MainPanel}>\r\n            <div className={classes.Grid}>\r\n              <img src={Image} alt=\"brand\" />\r\n              {!isRegister ? (\r\n                <Login loginCallback={(res) => setIsRegister(Boolean(res))} />\r\n              ) : (\r\n                <Register\r\n                  registerCallback={(res) => setIsRegister(Boolean(res))}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Redirect to=\"/products\" />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Redirect, useHistory } from \"react-router\";\r\nimport { LoginService } from \"../../services\";\r\nimport classes from \"../../assets/styles/Login.module.scss\";\r\n\r\nconst AuthRedirect = () => {\r\n  const [timer, setTimer] = useState(false);\r\n  const history = useHistory();\r\n  const user = LoginService.getUser();\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => setTimer(true), 3500);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {!user ? (\r\n        <div className={classes.Redirect}>\r\n          <div className={classes.Card}>\r\n            <div>\r\n              <h3>Successfully Registered</h3>\r\n              <p style={{ marginTop: \"1rem\" }}>\r\n                Will be Redirected automatically\r\n              </p>\r\n              <hr style={{ color: \"white\", marginTop: \"1.5rem\" }} />\r\n              <p\r\n                style={{ textAlign: \"center\", cursor: \"pointer\" }}\r\n                onClick={() => history.push(\"/login\")}\r\n              >\r\n                Click here to Redirect to Login.\r\n              </p>\r\n            </div>\r\n          </div>\r\n          {timer && <Redirect to={\"/login\"} />}\r\n        </div>\r\n      ) : (\r\n        <Redirect to=\"/products\" />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthRedirect;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport classes from \"../../assets/styles/Login.module.scss\";\r\n\r\nconst PurchaseComplete = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <div className={classes.Redirect}>\r\n      <div className={classes.Card}>\r\n        <div>\r\n          <h3>Purchase Successful</h3>\r\n          <p style={{ marginTop: \"1rem\" }}>\r\n            Enjoy the Free Money on the Test Run!\r\n          </p>\r\n          <hr style={{ color: \"white\", marginTop: \"1.5rem\" }} />\r\n          <p\r\n            style={{ textAlign: \"center\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              history.push(\"/cart\");\r\n              window.location.reload();\r\n            }}\r\n          >\r\n            Click here to Return to Cart\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PurchaseComplete;\r\n","import React from \"react\";\r\nimport { BsCartFill } from \"react-icons/bs\";\r\nimport { MdManageAccounts } from \"react-icons/md\";\r\nimport { IoLogOut } from \"react-icons/io5\";\r\nimport { useHistory } from \"react-router\";\r\nimport { LoginService } from \"../../services\";\r\nimport classes from \"../../assets/styles/Navbar.module.scss\";\r\n\r\nconst Navbar = () => {\r\n  const user = LoginService.getUser();\r\n  const history = useHistory();\r\n  const logoutHandler = () => {\r\n    LoginService.logout();\r\n  };\r\n\r\n  return (\r\n    <nav className={classes.Navbar}>\r\n      <h2\r\n        style={{ cursor: \"pointer\" }}\r\n        onClick={() => history.push(\"/products\")}\r\n      >\r\n        {user?.name}\r\n      </h2>\r\n      <div>\r\n        <BsCartFill onClick={() => history.push(\"/cart\")} />\r\n        <MdManageAccounts onClick={() => history.push(\"/account\")} />\r\n        <IoLogOut onClick={logoutHandler} />\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\r\nimport { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport accountReducer from \"./accountSlice\";\r\nimport shopReducer from \"./shopSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    shop: shopReducer,\r\n    account: accountReducer,\r\n  },\r\n});\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","import React from \"react\";\r\nimport { accountSelector } from \"../../redux/accountSlice\";\r\nimport { useTypedSelector } from \"../../redux/store\";\r\nimport classes from \"../../assets/styles/Home.module.scss\";\r\n\r\nconst Reminder = () => {\r\n  const { account } = useTypedSelector(accountSelector);\r\n  let componentAcc: any = account;\r\n  return (\r\n    <>\r\n      {componentAcc?.balance === 100000 ? (\r\n        <div className={classes.Reminder}>\r\n          <div>\r\n            <p>\r\n              Im feeling generous, so heres $100,000, Buy a Phone to get rid of\r\n              this Message.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reminder;\r\n","import React from \"react\";\r\nimport classes from \"../../assets/styles/Home.module.scss\";\r\n\r\ninterface ProductProps {\r\n  productName: string;\r\n  productBrand: string;\r\n  price: Number;\r\n  stock: Number;\r\n  productImage?: string;\r\n  viewProduct: () => void;\r\n}\r\n\r\nconst Product = ({\r\n  productName,\r\n  productBrand,\r\n  price,\r\n  stock,\r\n  productImage,\r\n  viewProduct,\r\n}: ProductProps) => {\r\n  return (\r\n    <div className={classes.Product}>\r\n      <img src={productImage || \"\"} alt=\"product\" />\r\n      <h4>{productName}</h4>\r\n      <h4>{productBrand}</h4>\r\n      <p>${price}</p>\r\n      <p>{stock} Remaining</p>\r\n      <div>\r\n        <button onClick={viewProduct}>Learn More</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import React, { Fragment } from \"react\";\r\nimport Navbar from \"../../components/interface/Navbar\";\r\nimport Reminder from \"../../components/interface/Reminder\";\r\nimport Product from \"../../components/products/Product\";\r\nimport { Redirect, useHistory } from \"react-router\";\r\nimport { LoginService } from \"../../services\";\r\nimport { shopSelector } from \"../../redux/shopSlice\";\r\nimport { useTypedSelector } from \"../../redux/store\";\r\nimport classes from \"../../assets/styles/Home.module.scss\";\r\n\r\nconst HomePage = () => {\r\n  const user = LoginService.getUser();\r\n  const history = useHistory();\r\n  const { products, cart } = useTypedSelector(shopSelector);\r\n  console.log(cart);\r\n  localStorage.removeItem(\"productInfo\");\r\n  const viewProduct = (product: any) => {\r\n    localStorage.setItem(\"productInfo\", JSON.stringify(product));\r\n    history.push({ pathname: `/products/${product._id}` });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {user ? (\r\n        <>\r\n          <Navbar />\r\n          <div className={classes.Home}>\r\n            <Reminder />\r\n            <div className={classes.ProductContainer}>\r\n              {products && products.length > 0 ? (\r\n                <div className={classes.ProductGrid}>\r\n                  {products.map((product) => (\r\n                    <Fragment key={product._id}>\r\n                      <Product\r\n                        {...product}\r\n                        viewProduct={() => viewProduct(product)}\r\n                      />\r\n                    </Fragment>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <h1 style={{ textAlign: \"center\", paddingTop: \"15rem\" }}>\r\n                  No Products Available at the Moment\r\n                </h1>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <Redirect to=\"/\" />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport classes from \"../../assets/styles/ProductInfo.module.scss\";\r\n\r\ninterface InfoProps {\r\n  productInfo: any;\r\n  quantity: Number;\r\n  addQuantity: () => void;\r\n  removeQuantity: () => void;\r\n  addToCartHandler: () => void;\r\n}\r\n\r\nconst ProductInfo = ({\r\n  productInfo,\r\n  quantity,\r\n  removeQuantity,\r\n  addQuantity,\r\n  addToCartHandler,\r\n}: InfoProps) => {\r\n  const history = useHistory();\r\n  return (\r\n    <div className={classes.PageContainer}>\r\n      <h1>{productInfo?.productName}</h1>\r\n      <div className={classes.Info}>\r\n        <div className={classes.InfoGrid}>\r\n          <div className={classes.Details}>\r\n            <img src={productInfo?.productImage} alt=\"brand\" />\r\n            <h3>Manufacturer: {productInfo?.productBrand}</h3>\r\n            <h3>Price: {productInfo?.price}</h3>\r\n            <h3>{productInfo?.stock} Remaining</h3>\r\n          </div>\r\n          <div className={classes.Specifications}>\r\n            <h2>Specifications</h2>\r\n            <h4>OS: {productInfo?.specifications?.os}</h4>\r\n            <hr />\r\n            <h4>Storage: {productInfo?.specifications?.storage}GB</h4>\r\n            <hr />\r\n            <h4>RAM: {productInfo?.specifications?.ram}GB</h4>\r\n            <hr />\r\n            <h4>Screen Size: {productInfo?.specifications?.size} inches</h4>\r\n            <hr />\r\n            <h4>\r\n              Resolution: {productInfo?.specifications?.resolution} Pixels\r\n            </h4>\r\n            <hr />\r\n            <h4>Battery: {productInfo?.specifications?.battery}</h4>\r\n            <div>\r\n              <h3 style={{ marginBottom: \"0.5rem\" }}>Quantity</h3>\r\n              <span>\r\n                <button onClick={removeQuantity} disabled={quantity === 1}>\r\n                  -\r\n                </button>{\" \"}\r\n                {quantity}{\" \"}\r\n                <button\r\n                  onClick={addQuantity}\r\n                  disabled={quantity === productInfo?.stock}\r\n                >\r\n                  +\r\n                </button>\r\n              </span>\r\n            </div>\r\n            <div className={classes.ButtonArea}>\r\n              <button onClick={() => history.push(\"/products\")}>Go Back</button>\r\n              <button\r\n                onClick={addToCartHandler}\r\n                style={{\r\n                  backgroundColor:\r\n                    productInfo?.stock > 0 ? \"#0275d8\" : \"#C9D6FF\",\r\n                  color: productInfo?.stock > 0 ? \"white\" : \"black\",\r\n                  cursor: productInfo?.stock > 0 ? \"pointer\" : \"unset\",\r\n                }}\r\n                disabled={productInfo?.stock === 0}\r\n              >\r\n                Add to Cart\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductInfo;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Navbar from \"../../components/interface/Navbar\";\r\nimport ProductInfo from \"../../components/products/ProductInfo\";\r\nimport { useHistory } from \"react-router\";\r\nimport { LoginService, ShopService } from \"../../services\";\r\nimport classes from \"../../assets/styles/ProductInfo.module.scss\";\r\n\r\nconst ProductInfoPage = () => {\r\n  const history = useHistory();\r\n  const product: any = localStorage.getItem(\"productInfo\");\r\n  const [productInfo, setProductInfo] = useState<any>();\r\n  const [quantity, setQuantity] = useState(1);\r\n  const user = LoginService.getUser();\r\n\r\n  useEffect(() => {\r\n    if (product) {\r\n      let parsedProduct = JSON.parse(product);\r\n      setProductInfo(parsedProduct);\r\n    } else {\r\n      history.push(\"/products\");\r\n    }\r\n  }, [history, product]);\r\n\r\n  const adjustQuanitity = (type: string) => {\r\n    switch (type) {\r\n      case \"inc\":\r\n        setQuantity(quantity + 1);\r\n        break;\r\n      case \"dec\":\r\n        setQuantity(quantity - 1);\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n\r\n  const addToCartHandler = (\r\n    userId: string,\r\n    productId: string,\r\n    quantity: Number\r\n  ) => {\r\n    ShopService.addProductToCart(quantity, userId, productId)\r\n      .then(() => {\r\n        history.push(\"/cart\");\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className={classes.ProductPage}>\r\n        <ProductInfo\r\n          productInfo={productInfo}\r\n          quantity={quantity}\r\n          addQuantity={() => adjustQuanitity(\"inc\")}\r\n          removeQuantity={() => adjustQuanitity(\"dec\")}\r\n          addToCartHandler={() =>\r\n            addToCartHandler(user._id, productInfo._id, quantity)\r\n          }\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductInfoPage;\r\n","import React from \"react\";\r\n\r\nconst Profile = ({ account }: any) => {\r\n  const total =\r\n    Math.round((Number(account?.balance) + Number.EPSILON) * 100) / 100;\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <h2>Full Name: {account?.name}</h2>\r\n      <h3>Email: {account?.email}</h3>\r\n      <h3>Balance: ${total}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport FormInput from \"../interface/FormInput\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { LoginService, AccountService } from \"../../services\";\r\nimport classes from \"../../assets/styles/Profile.module.scss\";\r\n\r\nconst ShippingInfo = ({ shipInfo }: any) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const user = LoginService.getUser();\r\n\r\n  const addShipping = handleSubmit((formData) => {\r\n    const data = {\r\n      phone: formData.phone ? formData.phone : shipInfo.phone,\r\n      address: formData.address ? formData.address : shipInfo.address,\r\n      postalCode: formData.postalCode\r\n        ? formData.postalCode\r\n        : shipInfo.postalCode,\r\n      country: formData.country ? formData.country : shipInfo.country,\r\n      city: formData.city ? formData.city : shipInfo.city,\r\n      province: formData.province ? formData.province : shipInfo.province,\r\n    };\r\n\r\n    AccountService.updateBilling(user._id, data)\r\n      .then(() => window.location.reload())\r\n      .catch((err) => console.log(err));\r\n  });\r\n\r\n  return (\r\n    <div className={classes.ShippingInfo}>\r\n      <div className={classes.ShippingForm}>\r\n        <h4>Shipping Information</h4>\r\n        <form>\r\n          <FormInput\r\n            register={register}\r\n            inputValue=\"phone\"\r\n            placeholder=\"Enter Phone Number\"\r\n            label=\"Phone\"\r\n            type=\"text\"\r\n            minLength={10}\r\n            maxLength={14}\r\n            errors={errors}\r\n            defaultValue={shipInfo?.phone}\r\n          />\r\n\r\n          <FormInput\r\n            register={register}\r\n            inputValue=\"address\"\r\n            placeholder=\"Enter Address for Billing/Shipping\"\r\n            label=\"Address\"\r\n            type=\"text\"\r\n            minLength={4}\r\n            errors={errors}\r\n            defaultValue={shipInfo?.address}\r\n          />\r\n\r\n          <FormInput\r\n            register={register}\r\n            inputValue=\"postalCode\"\r\n            placeholder=\"Enter Postal Code\"\r\n            label=\"Postal Code\"\r\n            type=\"text\"\r\n            minLength={5}\r\n            maxLength={6}\r\n            errors={errors}\r\n            defaultValue={shipInfo?.postalCode}\r\n          />\r\n\r\n          <FormInput\r\n            register={register}\r\n            inputValue=\"country\"\r\n            placeholder=\"Enter Country\"\r\n            label=\"Country\"\r\n            type=\"text\"\r\n            minLength={4}\r\n            errors={errors}\r\n            defaultValue={shipInfo?.country}\r\n          />\r\n\r\n          <FormInput\r\n            register={register}\r\n            inputValue=\"city\"\r\n            placeholder=\"Enter City\"\r\n            label=\"City\"\r\n            type=\"text\"\r\n            minLength={3}\r\n            errors={errors}\r\n            defaultValue={shipInfo?.city}\r\n          />\r\n\r\n          <FormInput\r\n            register={register}\r\n            inputValue=\"province\"\r\n            placeholder=\"Enter Province/State\"\r\n            label=\"Province/State\"\r\n            type=\"text\"\r\n            minLength={3}\r\n            errors={errors}\r\n            defaultValue={shipInfo?.province}\r\n          />\r\n        </form>\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <button onClick={addShipping}>Update Information</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShippingInfo;\r\n","import React from \"react\";\r\nimport Navbar from \"../../components/interface/Navbar\";\r\nimport Profile from \"../../components/account/Profile\";\r\nimport ShippingInfo from \"../../components/account/ShippingInfo\";\r\nimport { useTypedSelector } from \"../../redux/store\";\r\nimport { accountSelector } from \"../../redux/accountSlice\";\r\nimport classes from \"../../assets/styles/Profile.module.scss\";\r\nimport { Redirect } from \"react-router\";\r\nimport loginService from \"../../services/loginService\";\r\n\r\nconst ProfilePage = () => {\r\n  const { account } = useTypedSelector(accountSelector);\r\n  const acc: any = account;\r\n  const user = loginService.getUser();\r\n  return (\r\n    <>\r\n      {user ? (\r\n        <>\r\n          <Navbar />\r\n          <div className={classes.ProfilePage}>\r\n            <Profile account={account} />\r\n            <ShippingInfo shipInfo={acc?.shipping} />\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <Redirect to=\"/\" />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","import React, { useState } from \"react\";\r\nimport ErrorMessage from \"../interface/ErrorMessage\";\r\nimport { ShopService } from \"../../services\";\r\nimport classes from \"../../assets/styles/Cart.module.scss\";\r\n\r\ninterface ItemProps {\r\n  cart: any;\r\n}\r\n\r\nconst CartItem = ({ cart }: ItemProps) => {\r\n  const [error, setError] = useState(\"\");\r\n  const [quantity, setQuantity] = useState(cart?.quantity);\r\n\r\n  const incQuantity = () => {\r\n    setQuantity(quantity + 1);\r\n  };\r\n  const decQuantity = () => {\r\n    setQuantity(quantity - 1);\r\n  };\r\n  const updateCartItem = () => {\r\n    ShopService.updateProductInCart(\r\n      Number(quantity),\r\n      cart?._id,\r\n      cart?.productId\r\n    )\r\n      .then(() => window.location.reload())\r\n      .catch((err) => {\r\n        if (err.response.data.msg) {\r\n          setError(err?.response?.data?.msg);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {cart?.quantity !== 0 ? (\r\n        <div className={classes.CartItem}>\r\n          <div className={classes.ItemContainer}>\r\n            <img src={cart?.productImage} alt=\"product\" />\r\n            <div className={classes.InfoDiv}>\r\n              <h3>{cart?.productName}</h3>\r\n              <h4>{cart?.productBrand}</h4>\r\n              <h4>Current Total: ${cart?.totalPrice}</h4>\r\n              <h4>Current Quantity: {cart?.quantity}</h4>\r\n            </div>\r\n            <div className={classes.QuantityDiv}>\r\n              <span>\r\n                <button onClick={decQuantity} disabled={quantity === 0}>\r\n                  -\r\n                </button>\r\n                <h3 style={{ display: \"inline-block\", margin: \"0 0.5rem\" }}>\r\n                  {quantity}\r\n                </h3>\r\n                <button onClick={incQuantity}>+</button>\r\n              </span>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  paddingTop: \"1rem\",\r\n                }}\r\n              >\r\n                <button\r\n                  onClick={updateCartItem}\r\n                  className={\r\n                    quantity === 0 ? classes.RemoveBtn : classes.UpdateBtn\r\n                  }\r\n                >\r\n                  {quantity === 0 ? \"Remove\" : \"Update\"}\r\n                </button>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  padding: \"0 2.5rem\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <ErrorMessage message={error} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import React, { useState, Fragment } from \"react\";\r\nimport Navbar from \"../../components/interface/Navbar\";\r\nimport CartItem from \"../../components/products/CartItem\";\r\nimport ErrorMessage from \"../../components/interface/ErrorMessage\";\r\nimport { shopSelector } from \"../../redux/shopSlice\";\r\nimport { useTypedSelector } from \"../../redux/store\";\r\nimport { LoginService, ShopService } from \"../../services\";\r\nimport { Redirect, useHistory } from \"react-router\";\r\nimport classes from \"../../assets/styles/Cart.module.scss\";\r\n\r\nconst CartPage = () => {\r\n  const user = LoginService.getUser();\r\n  const { cart, totalSum } = useTypedSelector(shopSelector);\r\n  const total = Math.round((Number(totalSum) + Number.EPSILON) * 100) / 100;\r\n  const [isPurchase, setIsPurchase] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const purchaseAll = () => {\r\n    ShopService.purchaseCart(user._id)\r\n      .then(() => history.push(\"/purchased\"))\r\n      .catch((err) => {\r\n        if (err.response.data.msg) {\r\n          setError(err?.response?.data?.msg);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {user ? (\r\n        <>\r\n          <Navbar />\r\n          <div className={classes.CartPage}>\r\n            <h2>Your Cart</h2>\r\n            <div className={classes.CartContainer}>\r\n              {cart && cart.length > 0 ? (\r\n                cart.map((cart, index) => (\r\n                  <Fragment key={index}>\r\n                    <CartItem cart={cart} />\r\n                  </Fragment>\r\n                ))\r\n              ) : (\r\n                <h3 style={{ textAlign: \"center\" }}>\r\n                  Nothing Available in Cart\r\n                </h3>\r\n              )}\r\n            </div>\r\n            {cart && cart.length > 0 && (\r\n              <>\r\n                <h2>Total Sum: ${total}</h2>\r\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                  {!isPurchase ? (\r\n                    <button\r\n                      onClick={() => setIsPurchase(true)}\r\n                      className={classes.UpdateBtn}\r\n                    >\r\n                      Purchase\r\n                    </button>\r\n                  ) : (\r\n                    <div>\r\n                      <h3 style={{ textAlign: \"center\", marginTop: \"0\" }}>\r\n                        Are you Sure?\r\n                      </h3>\r\n                      <div\r\n                        style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                      >\r\n                        <button\r\n                          onClick={() => {\r\n                            setIsPurchase(false);\r\n                            setError(\"\");\r\n                          }}\r\n                          className={classes.RemoveBtn}\r\n                          style={{ margin: \"0 0.5rem\" }}\r\n                        >\r\n                          No\r\n                        </button>\r\n                        <button\r\n                          onClick={purchaseAll}\r\n                          className={classes.UpdateBtn}\r\n                          style={{ margin: \"0 0.5rem\" }}\r\n                        >\r\n                          Yes\r\n                        </button>\r\n                      </div>\r\n                      <div>\r\n                        <ErrorMessage message={error} />\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <Redirect to=\"/\" />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartPage;\r\n","import React, { useEffect } from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport { getAllProducts, getCart } from \"./redux/shopSlice\";\nimport { getUser } from \"./redux/accountSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { LoginService } from \"./services\";\nimport { LoginPage, AuthRedirect, PurchaseComplete } from \"./pages/common\";\nimport { HomePage, CartPage, ProfilePage, ProductInfoPage } from \"./pages/home\";\nimport \"./App.css\";\n\nfunction App() {\n  const user = LoginService.getUser();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (user) {\n      dispatch(getAllProducts());\n      dispatch(getCart());\n      dispatch(getUser());\n    }\n  }, [dispatch, user]);\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path={[\"/\", \"/login\"]} component={LoginPage} />\n        <Route exact path=\"/redirect\" component={AuthRedirect} />\n        <Route exact path=\"/products\" component={HomePage} />\n        <Route exact path=\"/products/:id\" component={ProductInfoPage} />\n        <Route exact path=\"/cart\" component={CartPage} />\n        <Route exact path=\"/account\" component={ProfilePage} />\n        <Route exact path=\"/purchased\" component={PurchaseComplete} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}